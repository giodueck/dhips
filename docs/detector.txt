## DOCUMENTACION ## detector.h, detector.cpp ##

La clase Detector es la clase base para los componentes detectores de cada modulo.

## DISENHO
 # AlarmType
Esta declaracion enum es una parte del disenho inicial de Detector, en el cual la idea detras
de las alarmas era tener varias categorias diferentes (esto esta presente en notepad.txt como
tambien en la base de datos), pero la funcionalidad nunca llego a ser implementada por completo.

 # CLASE
 # filename
Una cadena constante de C que almacena el path al archivo de log de alarmas.

 # module
Una cadena de C++ para identificar el modulo del cual forma parte el objeto. Es una cadena de C++
porque se simplifica la asignacion de cadenas de tamanho variable, y es una cadena y no un entero
porque almacena numeros romanos.

 # log
Las funciones log todas hacen lo mismo, con algunas pocas diferencias. La tarea principal es
escribir a alarmas.log un mensaje detallado con toda la informacion de una alarma y enviar un correo
a los administradores.
Para alarmas de ejecucion generadas por la ejecucion de main no se envian correos, y la informacion
de la alarma generada es limitada a lo necesario.

 # setup
setup es sobreescrita por las clases hijas de Detector. Se usa para hacer una configuracion o
inicializacion de variables y estructuras de datos.

 # scan
scan es sobreescrita por las clases hijas de Detector. Se usa para ejecutar un escaneo, es decir,
se verifican areas de interes para el modulo. En caso de encontrar algo que genere una alarma, log
se llama desde aqui. Si la alarma genera un acto de prevencion, este tambien se llama desde aqui.
El objeto Preventer que ejecuta el acto debe ser creado y asignado en las clases hijas por separado.

## CODIGO
Documentacion del codigo presente completamente en comentarios en detector.h